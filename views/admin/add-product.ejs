<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <title>Add Product - Dashboard HTML Template</title>
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css?family=Roboto:400,700"
    />
    <!-- https://fonts.google.com/specimen/Roboto -->
    <link rel="stylesheet" href="admin/css/fontawesome.min.css" />
    <!-- https://fontawesome.com/ -->
    <link rel="stylesheet" href="admin/jquery-ui-datepicker/jquery-ui.min.css" type="text/css" />
    <!-- http://api.jqueryui.com/datepicker/ -->
    <link rel="stylesheet" href="admin/css/bootstrap.min.css" />
    <!-- https://getbootstrap.com/ -->
    <link rel="stylesheet" href="admin/css/templatemo-style.css">
    <!--
	Product Admin CSS Template
	https://templatemo.com/tm-524-product-admin
	-->
  </head>

  <body>
    <%-include('./partials/nav.ejs')%>
    <div class="container tm-mt-big tm-mb-big">
      <div class="row">
        <div class="col-xl-9 col-lg-10 col-md-12 col-sm-12 mx-auto">
          <div class="tm-bg-primary-dark tm-block tm-block-h-auto">
            <div class="row">
              <div class="col-12">
                <h2 class="tm-block-title d-inline-block">Add Product
                <% if (typeof error !== 'undefined' && error) { %>
                  <div class="error-message" style="color: red;">
                    <%= error %>
                  </div>
                <% } %>
              </div>
              
            </div>
            <div class="row tm-edit-product-row">
              <div class="col-xl-6 col-lg-6 col-md-12">
                <form id="productForm" action="/productAdded" class="tm-edit-product-form" method="post" enctype="multipart/form-data">

                  <div class="form-group mb-3">
                    <label for="name">Product Name</label>
                    <input id="name" name="productName" type="text" class="form-control validate" />
                    <div class="invalid-feedback"></div>
                  </div>
                  <div class="form-group mb-3">
                    <label for="description">Description</label>
                    <textarea class="form-control validate" rows="3" name="description"></textarea>
                    <div class="invalid-feedback"></div>
                  </div>
                  <div class="form-group mb-3">
                    <label for="category">Category</label>
                    <select class="custom-select tm-select-accounts" id="category" name="category">
                      <% items.forEach((item, id) => {
                           if (!item.isBlocked) { %>
                              <option value="<%= item.Category %>"><%= item.Category %></option>
                      <%   }
                         }); %>
                    </select>
                    <div class="invalid-feedback"></div>
                  </div>
                  <div class="row">
                    <div class="form-group mb-3 col-xs-12 col-sm-6">
                      <label for="discount">DISCOUNT</label>
                      <input name="discount" type="number" class="form-control validate" data-large-mode="true" />
                      <div class="invalid-feedback"></div>
                    </div>
                    <div class="form-group mb-3 col-xs-12 col-sm-6">
                      <label for="stock">Units In Stock</label>
                      <input id="stock" name="stock" type="text" class="form-control validate" />
                      <div class="invalid-feedback"></div>
                    </div>
                  </div>
              </div>
              <div class="col-xl-6 col-lg-6 col-md-12 mx-auto mb-4">
                <div id="imagePreviewContainer" class="row tm-product-img-dummy mx-auto">
                  <i class="fas fa-cloud-upload-alt tm-upload-icon" onclick="document.getElementById('fileInput').click();"></i>
                </div>
                <div class="custom-file mt-3 mb-3">
                  <input id="fileInput" name="productImages" type="file" style="display:none;" accept=".jpg,.png,.jpeg" multiple />
                  <input type="button" class="btn btn-primary btn-block mx-auto" value="UPLOAD PRODUCT IMAGE" onclick="document.getElementById('fileInput').click();" />
                  <div class="invalid-feedback"></div>
                </div>
                <div class="form-group mb-3 col-xs-12 col-sm-6">
                  <label for="price">PRICE</label>
                  <input id="price" name="price" type="text" class="form-control validate" />
                  <div class="invalid-feedback"></div>
                </div>
              </div>
              <div class="col-12">
                <button type="submit" class="btn btn-primary btn-block text-uppercase">Add Product Now</button>
              </div>
              </form>
            </div>
            
          </div>
        </div>
      </div>
    </div>
    <%- include('./partials/adminfooter.ejs') %>

    <script src="admin/js/jquery-3.3.1.min.js"></script>
    <!-- https://jquery.com/download/ -->
    <script src="admin/jquery-ui-datepicker/jquery-ui.min.js"></script>
    <!-- https://jqueryui.com/download/ -->
    <script src="admin/js/bootstrap.min.js"></script>
    <!-- https://getbootstrap.com/ -->
    <script>
      $(function() {
        $("#expire_date").datepicker();
      });


      //for muliple image
      document.getElementById('fileInput').addEventListener('change', function(event) {
    const container = document.getElementById('imagePreviewContainer');
    container.innerHTML = ''; // Clear previous previews

    const files = event.target.files;
    for (let i = 0; i < files.length; i++) {
        const file = files[i];
        if (!file.type.startsWith('image/')) {
            console.log('File is not an image:', file.name);
            continue;
        }

        const reader = new FileReader();
        reader.onload = function(event) {
            const img = document.createElement('img');
            img.src = event.target.result;
            img.className = 'img-thumbnail';
            container.appendChild(img);
        };
        reader.readAsDataURL(file);
    }
});


//validation
document.getElementById('productForm').addEventListener('submit', function(event) {
  let isValid = true;
  const formElements = this.elements;

  // Clear previous error messages
  Array.from(formElements).forEach(element => {
    if (element.classList.contains('validate')) {
      element.classList.remove('is-invalid');
      element.nextElementSibling.textContent = '';
    }
  });

  // Validate product name
  const productName = formElements['productName'];
  const specialCharPattern = /[!@#$%^&*(),.?":{}|<>\\\/]/; // Allow only letters, numbers, and spaces

  function startsWithCapital(str) {
    return /^[A-Z]/.test(str);
  }

  if (!productName.value.trim()) {
    productName.classList.add('is-invalid');
    productName.nextElementSibling.textContent = 'Product Name is required';
    isValid = false;
  } else if (!startsWithCapital(productName.value.trim())) {
    productName.classList.add('is-invalid');
    productName.nextElementSibling.textContent = 'Product name must start with a capital letter';
    isValid = false;
  } else if (/^\s/.test(productName.value.trim())) {
    productName.classList.add('is-invalid');
    productName.nextElementSibling.textContent = 'Product name cannot begin with whitespace';
    isValid = false;
  } else if (specialCharPattern.test(productName.value.trim())) {
    productName.classList.add('is-invalid');
    productName.nextElementSibling.textContent = 'Product Name should not contain special characters';
    isValid = false;
  }

  // Validate description
  const description = formElements['description'];
  if (description.value.trim() === '') {
    description.classList.add('is-invalid');
    description.nextElementSibling.textContent = 'Description is required';
    isValid = false;
  }

  // Validate category
  const category = formElements['category'];
  if (category.value === '') {
    category.classList.add('is-invalid');
    category.nextElementSibling.textContent = 'Category is required';
    isValid = false;
  }

  // Validate discount
  const discount = formElements['discount'];
  if (discount.value === '' || discount.value < 0 || isNaN(discount.value)) {
    discount.classList.add('is-invalid');
    discount.nextElementSibling.textContent = 'Discount must be a non-negative number';
    isValid = false;
  }

  // Validate stock
  const stock = formElements['stock'];
  if (stock.value.trim() === '' || isNaN(stock.value) || stock.value < 0) {
    stock.classList.add('is-invalid');
    stock.nextElementSibling.textContent = 'Stock must be a non-negative number';
    isValid = false;
  }

  // Validate price
  const price = formElements['price'];
  if (price.value.trim() === '' || isNaN(price.value) || price.value < 0) {
    price.classList.add('is-invalid');
    price.nextElementSibling.textContent = 'Price must be a non-negative number';
    isValid = false;
  }

  // Validate file input
  const fileInput = formElements['productImages'];
  if (fileInput.files.length === 0) {
    fileInput.classList.add('is-invalid');
    fileInput.closest('.custom-file').querySelector('.invalid-feedback').textContent = 'Please upload at least one product image';
    isValid = false;
  }

  if (!isValid) {
    // If form is invalid, prevent submission
    event.preventDefault();
  }
});

    </script>
    <style>
      .tm-product-img-dummy {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
}

.tm-product-img-dummy img {
    width: calc(33.33% - 10px); /* Subtracting margin to ensure equal spacing */
    margin: 5px; /* Adjust margin as needed */
    box-sizing: border-box; /* Include padding and border in width calculation */
}

    </style>
  </body>
</html>
